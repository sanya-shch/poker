{"version":3,"file":"static/js/67.4715cc9e.chunk.js","mappings":"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","sources":["modules/UserBlock/index.js","modules/StartBlock/index.js"],"sourcesContent":["import React from \"react\";\nimport { doc, updateDoc } from \"firebase/firestore\";\n\nimport { db } from \"../../firebase\";\n\nimport \"./style.scss\";\n\nconst UserBlock = ({\n  imgSrc,\n  username,\n  itsI,\n  isCurrentPlayer,\n  numberOfCards,\n  isHost,\n  isStartBlock,\n  handleKick,\n  dealerUid,\n  playerUid,\n  id,\n}) => {\n  const handleClick = async () => {\n    if (playerUid !== dealerUid && isHost) {\n      await updateDoc(doc(db, `game_rooms_poker/${id}`), {\n        dealer_uid: playerUid,\n      });\n    }\n  };\n\n  return (\n    <div\n      className={`user_block ${itsI ? \"itsI\" : \"\"} ${\n        isCurrentPlayer ? \"is_current_player\" : \"\"\n      }`}\n    >\n      <p>{username}</p>\n      <img src={imgSrc} alt=\"\" width=\"65px\" height=\"65px\" loading=\"lazy\" />\n      <div\n        className={`dealer_block ${\n          playerUid === dealerUid ? \"current\" : \"\"\n        } ${isHost ? 'is_host' : ''}`}\n        onClick={handleClick}\n      >\n        D\n      </div>\n      {isHost && isStartBlock && !itsI && (\n        <button onClick={handleKick}>X</button>\n      )}\n    </div>\n  );\n};\n\nexport default UserBlock;\n","import React, { useContext } from \"react\";\nimport {\n  doc,\n  updateDoc,\n  arrayUnion,\n  arrayRemove,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { db } from \"../../firebase\";\nimport * as icons from \"../../assets/playerIcons\";\nimport { ToastContext } from \"../../components/Toast\";\nimport { getNextPlayer, startGame } from \"../../helpers\";\nimport MainButton from \"../../components/MainButton\";\nimport UserBlock from \"../UserBlock\";\n\nimport \"./style.scss\";\n\nconst StartBlock = ({ isHost, playerDataArr, uuid, id, dealerUid }) => {\n  const navigate = useNavigate();\n\n  const { setToast } = useContext(ToastContext);\n\n  const handleClickStart = () => {\n    if (playerDataArr?.length >= 2) {\n      startGame({ playerDataArr, id, dealerUid });\n    } else {\n      setToast({\n        type: \"danger\",\n        text: \"At least 2 players are required\",\n      });\n    }\n  };\n\n  const handleClickDelete = async () => {\n    await updateDoc(doc(db, \"game_rooms_poker\", id), {\n      game_room_closed: true,\n    });\n    await deleteDoc(doc(db, \"game_rooms_poker\", id));\n    await updateDoc(doc(db, \"game_room_codes_poker\", \"code_array\"), {\n      codes: arrayRemove(id),\n    });\n  };\n\n  const handleKick = async (uid) => {\n    await updateDoc(doc(db, \"game_rooms_poker\", id), {\n      banned_player_uid: arrayUnion(uid),\n      player_data_arr: playerDataArr.filter((player) => player.uid !== uid),\n    });\n  };\n\n  const handleClickLeave = async () => {\n    const player = playerDataArr.find((arr) => arr.uid === uuid);\n\n    const playersList = playerDataArr.map((item) => item.uid);\n    const newDealerUid = getNextPlayer(playersList, dealerUid);\n\n    updateDoc(doc(db, \"game_rooms_poker\", id), {\n      player_data_arr: arrayRemove(player),\n      dealer_uid: player.uid === uuid ? newDealerUid : dealerUid,\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"start_block\">\n      <div className=\"player_block\">\n        {playerDataArr?.map((player) => (\n          <UserBlock\n            key={player.uid}\n            imgSrc={icons[player.icon_index]}\n            username={player.username}\n            itsI={uuid === player.uid}\n            numberOfCards={10}\n            isHost={isHost}\n            handleKick={() => handleKick(player.uid)}\n            isStartBlock\n            dealerUid={dealerUid}\n            playerUid={player.uid}\n            id={id}\n          />\n        ))}\n      </div>\n      {isHost ? (\n        <div className=\"btn-block\">\n          <MainButton text=\"Delete Room ×\" onClick={handleClickDelete} />\n          <MainButton text=\"Start Game →\" onClick={handleClickStart} />\n        </div>\n      ) : (\n        <div className=\"btn-block\">\n          <MainButton text=\"Leave ↪\" onClick={handleClickLeave} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StartBlock;\n"],"names":["imgSrc","username","itsI","isCurrentPlayer","isHost","numberOfCards","isStartBlock","handleKick","dealerUid","playerUid","id","handleClick","updateDoc","doc","db","dealer_uid","className","src","alt","width","height","loading","onClick","playerDataArr","uuid","navigate","useNavigate","setToast","useContext","ToastContext","handleClickDelete","game_room_closed","deleteDoc","codes","arrayRemove","uid","banned_player_uid","arrayUnion","player_data_arr","filter","player","handleClickLeave","find","arr","playersList","map","item","newDealerUid","getNextPlayer","icons","icon_index","MainButton","text","length","startGame","type"],"sourceRoot":""}