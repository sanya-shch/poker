{"version":3,"file":"static/js/205.37e94557.chunk.js","mappings":"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","sources":["components/ReactPortal/index.js","components/Input/index.js","modules/StartModal/index.js"],"sourcesContent":["import { useState, useLayoutEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nfunction createWrapperAndAppendToBody(wrapperId) {\n  const wrapperElement = document.createElement(\"div\");\n  wrapperElement.setAttribute(\"id\", wrapperId);\n  document.body.appendChild(wrapperElement);\n  return wrapperElement;\n}\n\nfunction ReactPortal({ children, wrapperId = \"react-portal-wrapper\" }) {\n  const [wrapperElement, setWrapperElement] = useState(null);\n\n  useLayoutEffect(() => {\n    let element = document.getElementById(wrapperId);\n    let systemCreated = false;\n\n    if (!element) {\n      systemCreated = true;\n      element = createWrapperAndAppendToBody(wrapperId);\n    }\n    setWrapperElement(element);\n\n    return () => {\n      if (systemCreated && element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    };\n  }, [wrapperId]);\n\n  if (wrapperElement === null) return;\n\n  return createPortal(children, wrapperElement);\n}\n\nexport default ReactPortal;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Input = ({ value, onChange, maxLength }) => {\n  return (\n    <div className=\"input_container\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        className=\"question\"\n        id=\"nme\"\n        required\n        autoComplete=\"off\"\n        maxLength={maxLength}\n        value={value}\n        onChange={onChange}\n      />\n      <label htmlFor=\"nme\">\n        <span>What's your name?</span>\n      </label>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState, useContext } from \"react\";\nimport { doc, updateDoc, arrayUnion } from \"firebase/firestore\";\n\nimport * as icons from \"../../assets/playerIcons\";\nimport { db } from \"../../firebase\";\nimport { ToastContext } from \"../../components/Toast\";\nimport ReactPortal from \"../../components/ReactPortal\";\nimport Input from \"../../components/Input\";\nimport MainButton from \"../../components/MainButton\";\n\nimport \"./style.scss\";\n\nconst StartModal = ({\n  isOpen,\n  handleClose,\n  isHost,\n  id,\n  uuid,\n  ongoingGame,\n}) => {\n  const { setToast } = useContext(ToastContext);\n\n  const [checked, setChecked] = useState(Object.keys(icons)[0]);\n  const [username, setUsername] = useState(\"\");\n\n  const handleClick = () => {\n    if (checked && username) {\n      updateDoc(doc(db, \"game_rooms_poker\", id), {\n        player_data_arr: arrayUnion({\n          username,\n          uid: uuid,\n          points: 0,\n          icon_index: checked,\n          money: 5000,\n          chips: {\n            25: 4,\n            100: 4,\n            500: 4,\n            1000: 4,\n          }\n        }),\n      });\n\n      if (ongoingGame) {\n        updateDoc(doc(db, \"game_rooms_poker\", id), {\n          midgame_player_uid: arrayUnion(uuid),\n        });\n      }\n\n      handleClose();\n    } else {\n      if (!username) {\n        setToast({\n          type: \"danger\",\n          text: \"Enter your username\",\n        });\n      }\n      if (!checked) {\n        setToast({\n          type: \"danger\",\n          text: \"Select the icon\",\n        });\n      }\n    }\n  };\n\n  const handleChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <ReactPortal wrapperId=\"react-portal-start-modal\">\n      <div className=\"start-modal\">\n        <div className=\"modal-content\">\n          <div className=\"input_name_block\">\n            <Input maxLength={12} value={username} onChange={handleChange} />\n          </div>\n          <div className=\"content_block\">\n            <div className=\"icons_block custom_scrollbar\">\n              {Object.keys(icons).map((item) => (\n                <div\n                  key={`img-${item}`}\n                  className={item === checked ? \"checked\" : \"\"}\n                >\n                  <img\n                    src={icons[item]}\n                    alt={item}\n                    width=\"65px\"\n                    height=\"65px\"\n                    onClick={() => setChecked(item)}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"btn_block\">\n            <MainButton text=\"Join\" onClick={handleClick} />\n          </div>\n        </div>\n      </div>\n    </ReactPortal>\n  );\n};\n\nexport default StartModal;\n"],"names":["children","wrapperId","useState","wrapperElement","setWrapperElement","useLayoutEffect","element","document","getElementById","systemCreated","createElement","setAttribute","body","appendChild","createWrapperAndAppendToBody","parentNode","removeChild","createPortal","value","onChange","maxLength","className","type","name","id","required","autoComplete","htmlFor","isOpen","handleClose","isHost","uuid","ongoingGame","setToast","useContext","ToastContext","Object","keys","icons","checked","setChecked","username","setUsername","ReactPortal","event","target","map","item","src","alt","width","height","onClick","MainButton","text","updateDoc","doc","db","player_data_arr","arrayUnion","uid","points","icon_index","money","chips","midgame_player_uid"],"sourceRoot":""}