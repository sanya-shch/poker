{"version":3,"file":"static/js/716.189b1b7d.chunk.js","mappings":"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","sources":["components/ReactPortal/index.js","components/CircleTimer/index.js","components/Tooltip/index.js","modules/FinishModal/index.js"],"sourcesContent":["import { useState, useLayoutEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nfunction createWrapperAndAppendToBody(wrapperId) {\n  const wrapperElement = document.createElement(\"div\");\n  wrapperElement.setAttribute(\"id\", wrapperId);\n  document.body.appendChild(wrapperElement);\n  return wrapperElement;\n}\n\nfunction ReactPortal({ children, wrapperId = \"react-portal-wrapper\" }) {\n  const [wrapperElement, setWrapperElement] = useState(null);\n\n  useLayoutEffect(() => {\n    let element = document.getElementById(wrapperId);\n    let systemCreated = false;\n\n    if (!element) {\n      systemCreated = true;\n      element = createWrapperAndAppendToBody(wrapperId);\n    }\n    setWrapperElement(element);\n\n    return () => {\n      if (systemCreated && element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    };\n  }, [wrapperId]);\n\n  if (wrapperElement === null) return;\n\n  return createPortal(children, wrapperElement);\n}\n\nexport default ReactPortal;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nconst CircleTimer = () => {\n  return (\n    <div className=\"loader-container\">\n      <svg>\n        <circle cx=\"15\" cy=\"15\" r=\"15\" />\n      </svg>\n    </div>\n  );\n};\n\nexport default CircleTimer;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Tooltip = ({ children, text = \"\", position = \"down\" }) => {\n  return (\n    <div tooltip={text} flow={position}>\n      {children}\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React from \"react\";\nimport { doc, updateDoc } from \"firebase/firestore\";\n\nimport { db } from \"../../firebase\";\nimport { gameStages } from \"../../constants/gameStage\";\nimport * as cardTypeIcons from \"../../assets/cardTypeIcons\";\nimport { gameActionTypes } from \"../../constants/gameActionTypes\";\nimport { combinationCheck, getNextPlayer, getWinners } from \"../../helpers\";\nimport ReactPortal from \"../../components/ReactPortal\";\nimport CircleTimer from \"../../components/CircleTimer\";\nimport Tooltip from \"../../components/Tooltip\";\n\nimport \"./style.scss\";\n\nconst FinishModal = ({\n  isOpen,\n  handleClose,\n  isHost,\n  id,\n  uuid,\n  playerCards,\n  lastActions,\n  gameCards,\n  playerDataArr,\n  playersList,\n  dealerUid,\n  allInBanks,\n  bankCount,\n}) => {\n  const combinations = Object.keys(playerCards)\n    .filter((uid) => lastActions[uid].action !== gameActionTypes.fold)\n    .map((uid) => ({\n      combination: combinationCheck([...playerCards[uid], ...gameCards]),\n      uid,\n    }))\n    .sort(\n      (a, b) =>\n        Number(b.combination.combinationCost) -\n        Number(a.combination.combinationCost)\n    );\n\n  const winners = getWinners({\n    allInBanks,\n    combinations,\n    bankCount,\n    lastActions,\n  });\n\n  const nextUid = getNextPlayer(playersList, dealerUid);\n\n  const players = playerDataArr.reduce(\n    (acc, item) => ({ ...acc, [item.uid]: item }),\n    {}\n  );\n\n  const finishGameHandler = () => {\n    if (isHost) {\n      updateDoc(doc(db, `game_rooms_poker/${id}`), {\n        ongoing_game: false,\n        midgame_player_uid: [],\n        card_deck: [],\n        player_cards: {},\n        players_list: [],\n        current_player_uid: uuid,\n        last_actions: {},\n        game_stage: gameStages.start,\n        game_cards: [],\n        bank: 0,\n        current_bet: 0,\n        player_data_arr: playerDataArr.map((item) => {\n          const winnerPlayer = winners.find(\n            (winner) => item.uid === winner.uid\n          );\n          return winnerPlayer\n            ? {\n                ...item,\n                points: item.points + 1,\n                money: item.money + winnerPlayer.bank,\n              }\n            : item;\n        }),\n        dealer_uid: nextUid,\n        all_in_banks: {},\n      }).finally(() => handleClose());\n    } else {\n      handleClose();\n    }\n  };\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      finishGameHandler();\n    }, 15000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  // React.useEffect(() => {\n  //   if (isOpen) {\n  //     document.body.style.overflow = \"hidden\";\n  //   }\n  //   if (isOpen && window.innerWidth > 767) {\n  //     document.getElementById(\"root\").style.filter = \"blur(2px)\";\n  //   }\n  //\n  //   return () => {\n  //     document.body.style.overflow = \"auto\";\n  //     document.getElementById(\"root\").style.filter = \"\";\n  //   };\n  // }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  return (\n    <ReactPortal wrapperId=\"react-portal-start-modal\">\n      <div className=\"finish-modal\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <div>Game Results</div>\n\n            <CircleTimer />\n          </div>\n\n          <div className=\"content_block combination_block custom_scrollbar\">\n            {combinations.map((item) => (\n              <div key={item.uid} className=\"combination_item\">\n                <p>{players[item.uid].username}</p>\n\n                <Tooltip\n                  text={item.combination.combinationName}\n                  position=\"left\"\n                >\n                  <div className=\"combination_item_row\">\n                    {item.combination.cards.map((card) => (\n                      <div\n                        key={`${players[item.uid].username}-${card.number}-${\n                          card.type\n                        }`}\n                        className=\"combination_card_item\"\n                      >\n                        <p>{card.number}</p>\n                        <img src={cardTypeIcons[card.type]} alt=\"\" />\n                      </div>\n                    ))}\n                  </div>\n                </Tooltip>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </ReactPortal>\n  );\n};\n\nexport default FinishModal;\n"],"names":["children","wrapperId","useState","wrapperElement","setWrapperElement","useLayoutEffect","element","document","getElementById","systemCreated","createElement","setAttribute","body","appendChild","createWrapperAndAppendToBody","parentNode","removeChild","createPortal","className","cx","cy","r","text","position","tooltip","flow","isOpen","handleClose","isHost","id","uuid","playerCards","lastActions","gameCards","playerDataArr","playersList","dealerUid","allInBanks","bankCount","combinations","Object","keys","filter","uid","action","gameActionTypes","map","combination","combinationCheck","sort","a","b","Number","combinationCost","winners","getWinners","nextUid","getNextPlayer","players","reduce","acc","item","React","timer","setTimeout","updateDoc","doc","db","ongoing_game","midgame_player_uid","card_deck","player_cards","players_list","current_player_uid","last_actions","game_stage","gameStages","game_cards","bank","current_bet","player_data_arr","winnerPlayer","find","winner","points","money","dealer_uid","all_in_banks","finally","clearTimeout","ReactPortal","username","combinationName","cards","card","number","src","cardTypeIcons","type","alt"],"sourceRoot":""}